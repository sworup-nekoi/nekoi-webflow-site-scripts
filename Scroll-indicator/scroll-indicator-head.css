/* Scroll Indicators â€“ Head CSS (CDN, animated accent variant)
   Matches the Project Settings version with overlay + keyframes.
   Works with JS that:
     - toggles .is-at-end on .indicator-wrapper
     - writes --ind-merge-shift (px) on the wrapper
*/

/* Mobile safe-area helpers (for docked indicators) */
:root {
  --safe-left: env(safe-area-inset-left, 0px);
  --safe-right: env(safe-area-inset-right, 0px);
  --safe-bottom: env(safe-area-inset-bottom, 0px);
  --ind-bottom-gap: 12px; /* default dock gap; override per page if needed */
}

/* If you place the wrapper directly as a fixed footer indicator, add this class */
.indicator-dock--bottom {
  position: fixed;
  left: max(12px, var(--safe-left));
  right: max(12px, var(--safe-right));
  bottom: calc(var(--safe-bottom) + var(--ind-bottom-gap, 12px));
  z-index: 9999;
  pointer-events: none; /* overlay only; remove if the element needs clicks */
  transform: translateZ(0);
  will-change: transform;
}

/* Wrapper-level knobs */
.indicator-wrapper {
  --ind-cycle: 2000ms;
  --ind-ease: linear;

  /* YOUR COLORS */
  --indicator-off: var(--_theme---text-main); /* base/default color */
  --indicator-on:  var(--_theme---outline);   /* active highlight */

  /* merge-on-bottom knobs */
  --ind-merge-shift: 0px; /* how far the rows slide to meet */
  --ind-merge-in: 260ms;  /* slide duration */
  contain: layout style paint;
}

/* Each line/square uses the base color */
.indicator-wrapper .indicator {
  position: relative;
  background: var(--indicator-off);
  border-radius: inherit; /* keep if you use rounding */
  will-change: transform, opacity;
  transform: translateZ(0);
}

/* Accent overlay */
.indicator-wrapper .indicator::after {
  content: "";
  position: absolute;
  inset: 0;
  background: var(--indicator-on);
  opacity: 0;
  pointer-events: none;
  border-radius: inherit;
  will-change: opacity;
  transform: translateZ(0);
}

/* TOP row first */
.indicator-wrapper .indicator-top-wrapper .indicator::after {
  animation: indTop var(--ind-cycle) var(--ind-ease) infinite;
}

/* BOTTOM single next */
.indicator-wrapper > .indicator::after {
  animation: indBottom var(--ind-cycle) var(--ind-ease) infinite;
}

/* Merge-on-bottom behavior */
.indicator-top-wrapper,
.indicator-wrapper > .indicator {
  transition: transform var(--ind-merge-in) var(--ind-ease, linear);
  will-change: transform;
  transform: translateZ(0);
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden;
}
.indicator-wrapper.is-at-end .indicator-top-wrapper {
  transform: translate3d(0, var(--ind-merge-shift), 0);
}
.indicator-wrapper.is-at-end > .indicator {
  transform: translate3d(0, calc(-1 * var(--ind-merge-shift)), 0);
}

/* Timing windows */
@keyframes indTop {
  0%   { opacity: 0; }
  4%   { opacity: 0; animation-timing-function: cubic-bezier(0.22, 0.61, 0.36, 1); }
  5%   { opacity: 1; }
  40%  { opacity: 1; animation-timing-function: cubic-bezier(0.65, 0, 0.35, 1); }
  41%  { opacity: 0; }
  100% { opacity: 0; }
}
@keyframes indBottom {
  0%   { opacity: 0; }
  39%  { opacity: 0; animation-timing-function: cubic-bezier(0.55, 0.01, 0.14, 1); }
  40%  { opacity: 1; }
  65%  { opacity: 1; animation-timing-function: cubic-bezier(0.55, 0.01, 0.14, 1); }
  66%  { opacity: 0; }
  100% { opacity: 0; }
}

/* Respect reduced motion */
@media (prefers-reduced-motion: reduce) {
  .indicator-wrapper .indicator::after { animation: none; }
}